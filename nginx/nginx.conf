user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    server_tokens	off;

    sendfile 		on;
    tcp_nopush		on;

    keepalive_timeout	60;
    tcp_nodelay		on;
    client_body_timeout 15;

    gzip		on;
    gzip_vary		on;
    gzip_min_length		1k;

    ssl_certificate /etc/letsencrypt/live/eademir.dev-0001/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/eademir.dev-0001/privkey.pem;

    proxy_cache_path  /data/nginx/cache  levels=1:2    keys_zone=STATIC:10m
    inactive=24h  max_size=1g;

    server {
        listen 80;
        listen [::]:80;
        server_name eademir.dev www.eademir.dev admin.eademir.dev;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://$host$request_uri;
        }    
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name eademir.dev;

        location / {
            root   /usr/share/nginx/html/user;
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;
        }

        location /api/v1 {
            rewrite /api/v1/(.*) /$1 break;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header Host            $http_host;
            proxy_pass                       http://backend:8080/;
        }
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name admin.eademir.dev;

        location / {
            root   /usr/share/nginx/html/admin;
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;
        }

        location /login {
            proxy_pass   http://backend:8080;
            proxy_set_header       Host $host;
            proxy_buffering        on;
            proxy_cache            STATIC;
            proxy_cache_valid      200  1d;
            proxy_cache_use_stale  error timeout invalid_header updating
                                   http_500 http_502 http_503 http_504;
        }

        location /api/v1 {
            proxy_pass   http://backend:8080;
            proxy_set_header       Host $host;
            proxy_buffering        on;
            proxy_cache            STATIC;
            proxy_cache_valid      200  1d;
            proxy_cache_use_stale  error timeout invalid_header updating
                                   http_500 http_502 http_503 http_504;

        }
    }

    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}